#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SH.Crawler.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ExactReport")]
	public partial class dbModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCRItemPrice(CRItemPrice instance);
    partial void UpdateCRItemPrice(CRItemPrice instance);
    partial void DeleteCRItemPrice(CRItemPrice instance);
    partial void InsertCRItem(CRItem instance);
    partial void UpdateCRItem(CRItem instance);
    partial void DeleteCRItem(CRItem instance);
    partial void InsertCRSitePage(CRSitePage instance);
    partial void UpdateCRSitePage(CRSitePage instance);
    partial void DeleteCRSitePage(CRSitePage instance);
    partial void InsertCRSite(CRSite instance);
    partial void UpdateCRSite(CRSite instance);
    partial void DeleteCRSite(CRSite instance);
    #endregion
		
		public dbModelDataContext() : 
				base(global::SH.Crawler.Properties.Settings.Default.ExactReportConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CRItemPrice> CRItemPrices
		{
			get
			{
				return this.GetTable<CRItemPrice>();
			}
		}
		
		public System.Data.Linq.Table<CRItem> CRItems
		{
			get
			{
				return this.GetTable<CRItem>();
			}
		}
		
		public System.Data.Linq.Table<CRSitePage> CRSitePages
		{
			get
			{
				return this.GetTable<CRSitePage>();
			}
		}
		
		public System.Data.Linq.Table<CRSite> CRSites
		{
			get
			{
				return this.GetTable<CRSite>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Proc_CRLoadUrlCraw")]
		public ISingleResult<Proc_CRLoadUrlCrawResult> Proc_CRLoadUrlCraw([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteCode", DbType="NVarChar(40)")] string siteCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteCode);
			return ((ISingleResult<Proc_CRLoadUrlCrawResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRItemPrice")]
	public partial class CRItemPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SiteCode;
		
		private string _ItemSiteCode;
		
		private string _ItemBrand;
		
		private string _ItemSiteName;
		
		private string _SiteItemGroup;
		
		private double _SitePrice;
		
		private string _Description;
		
		private string _Promotion;
		
		private string _UrlCheck;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteCodeChanging(string value);
    partial void OnSiteCodeChanged();
    partial void OnItemSiteCodeChanging(string value);
    partial void OnItemSiteCodeChanged();
    partial void OnItemBrandChanging(string value);
    partial void OnItemBrandChanged();
    partial void OnItemSiteNameChanging(string value);
    partial void OnItemSiteNameChanged();
    partial void OnSiteItemGroupChanging(string value);
    partial void OnSiteItemGroupChanged();
    partial void OnSitePriceChanging(double value);
    partial void OnSitePriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPromotionChanging(string value);
    partial void OnPromotionChanged();
    partial void OnUrlCheckChanging(string value);
    partial void OnUrlCheckChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    #endregion
		
		public CRItemPrice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SiteCode
		{
			get
			{
				return this._SiteCode;
			}
			set
			{
				if ((this._SiteCode != value))
				{
					this.OnSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._SiteCode = value;
					this.SendPropertyChanged("SiteCode");
					this.OnSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSiteCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemSiteCode
		{
			get
			{
				return this._ItemSiteCode;
			}
			set
			{
				if ((this._ItemSiteCode != value))
				{
					this.OnItemSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemSiteCode = value;
					this.SendPropertyChanged("ItemSiteCode");
					this.OnItemSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBrand", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemBrand
		{
			get
			{
				return this._ItemBrand;
			}
			set
			{
				if ((this._ItemBrand != value))
				{
					this.OnItemBrandChanging(value);
					this.SendPropertyChanging();
					this._ItemBrand = value;
					this.SendPropertyChanged("ItemBrand");
					this.OnItemBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSiteName", DbType="NVarChar(500)")]
		public string ItemSiteName
		{
			get
			{
				return this._ItemSiteName;
			}
			set
			{
				if ((this._ItemSiteName != value))
				{
					this.OnItemSiteNameChanging(value);
					this.SendPropertyChanging();
					this._ItemSiteName = value;
					this.SendPropertyChanged("ItemSiteName");
					this.OnItemSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteItemGroup", DbType="NVarChar(50)")]
		public string SiteItemGroup
		{
			get
			{
				return this._SiteItemGroup;
			}
			set
			{
				if ((this._SiteItemGroup != value))
				{
					this.OnSiteItemGroupChanging(value);
					this.SendPropertyChanging();
					this._SiteItemGroup = value;
					this.SendPropertyChanged("SiteItemGroup");
					this.OnSiteItemGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SitePrice", DbType="Float NOT NULL")]
		public double SitePrice
		{
			get
			{
				return this._SitePrice;
			}
			set
			{
				if ((this._SitePrice != value))
				{
					this.OnSitePriceChanging(value);
					this.SendPropertyChanging();
					this._SitePrice = value;
					this.SendPropertyChanged("SitePrice");
					this.OnSitePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion", DbType="NVarChar(500)")]
		public string Promotion
		{
			get
			{
				return this._Promotion;
			}
			set
			{
				if ((this._Promotion != value))
				{
					this.OnPromotionChanging(value);
					this.SendPropertyChanging();
					this._Promotion = value;
					this.SendPropertyChanged("Promotion");
					this.OnPromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCheck", DbType="NVarChar(500)")]
		public string UrlCheck
		{
			get
			{
				return this._UrlCheck;
			}
			set
			{
				if ((this._UrlCheck != value))
				{
					this.OnUrlCheckChanging(value);
					this.SendPropertyChanging();
					this._UrlCheck = value;
					this.SendPropertyChanged("UrlCheck");
					this.OnUrlCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRItems")]
	public partial class CRItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _ItemCode;
		
		private string _SiteCode;
		
		private string _ItemSiteCode;
		
		private string _ItemSiteSearchCode;
		
		private EntityRef<CRSite> _CRSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnSiteCodeChanging(string value);
    partial void OnSiteCodeChanged();
    partial void OnItemSiteCodeChanging(string value);
    partial void OnItemSiteCodeChanged();
    partial void OnItemSiteSearchCodeChanging(string value);
    partial void OnItemSiteSearchCodeChanged();
    #endregion
		
		public CRItem()
		{
			this._CRSite = default(EntityRef<CRSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteCode
		{
			get
			{
				return this._SiteCode;
			}
			set
			{
				if ((this._SiteCode != value))
				{
					if (this._CRSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._SiteCode = value;
					this.SendPropertyChanged("SiteCode");
					this.OnSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemSiteCode
		{
			get
			{
				return this._ItemSiteCode;
			}
			set
			{
				if ((this._ItemSiteCode != value))
				{
					this.OnItemSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemSiteCode = value;
					this.SendPropertyChanged("ItemSiteCode");
					this.OnItemSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSiteSearchCode", DbType="VarChar(50)")]
		public string ItemSiteSearchCode
		{
			get
			{
				return this._ItemSiteSearchCode;
			}
			set
			{
				if ((this._ItemSiteSearchCode != value))
				{
					this.OnItemSiteSearchCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemSiteSearchCode = value;
					this.SendPropertyChanged("ItemSiteSearchCode");
					this.OnItemSiteSearchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRSite_CRItem", Storage="_CRSite", ThisKey="SiteCode", OtherKey="SiteCode", IsForeignKey=true)]
		public CRSite CRSite
		{
			get
			{
				return this._CRSite.Entity;
			}
			set
			{
				CRSite previousValue = this._CRSite.Entity;
				if (((previousValue != value) 
							|| (this._CRSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRSite.Entity = null;
						previousValue.CRItems.Remove(this);
					}
					this._CRSite.Entity = value;
					if ((value != null))
					{
						value.CRItems.Add(this);
						this._SiteCode = value.SiteCode;
					}
					else
					{
						this._SiteCode = default(string);
					}
					this.SendPropertyChanged("CRSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRSitePages")]
	public partial class CRSitePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PageUrl;
		
		private string _SiteCode;
		
		private string _SiteItemGroup;
		
		private EntityRef<CRSite> _CRSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageUrlChanging(string value);
    partial void OnPageUrlChanged();
    partial void OnSiteCodeChanging(string value);
    partial void OnSiteCodeChanged();
    partial void OnSiteItemGroupChanging(string value);
    partial void OnSiteItemGroupChanged();
    #endregion
		
		public CRSitePage()
		{
			this._CRSite = default(EntityRef<CRSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageUrl", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PageUrl
		{
			get
			{
				return this._PageUrl;
			}
			set
			{
				if ((this._PageUrl != value))
				{
					this.OnPageUrlChanging(value);
					this.SendPropertyChanging();
					this._PageUrl = value;
					this.SendPropertyChanged("PageUrl");
					this.OnPageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteCode
		{
			get
			{
				return this._SiteCode;
			}
			set
			{
				if ((this._SiteCode != value))
				{
					if (this._CRSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._SiteCode = value;
					this.SendPropertyChanged("SiteCode");
					this.OnSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteItemGroup", DbType="NVarChar(50)")]
		public string SiteItemGroup
		{
			get
			{
				return this._SiteItemGroup;
			}
			set
			{
				if ((this._SiteItemGroup != value))
				{
					this.OnSiteItemGroupChanging(value);
					this.SendPropertyChanging();
					this._SiteItemGroup = value;
					this.SendPropertyChanged("SiteItemGroup");
					this.OnSiteItemGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRSite_CRSitePage", Storage="_CRSite", ThisKey="SiteCode", OtherKey="SiteCode", IsForeignKey=true)]
		public CRSite CRSite
		{
			get
			{
				return this._CRSite.Entity;
			}
			set
			{
				CRSite previousValue = this._CRSite.Entity;
				if (((previousValue != value) 
							|| (this._CRSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRSite.Entity = null;
						previousValue.CRSitePages.Remove(this);
					}
					this._CRSite.Entity = value;
					if ((value != null))
					{
						value.CRSitePages.Add(this);
						this._SiteCode = value.SiteCode;
					}
					else
					{
						this._SiteCode = default(string);
					}
					this.SendPropertyChanged("CRSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRSites")]
	public partial class CRSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SiteCode;
		
		private string _SiteUrl;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<CRItem> _CRItems;
		
		private EntitySet<CRSitePage> _CRSitePages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteCodeChanging(string value);
    partial void OnSiteCodeChanged();
    partial void OnSiteUrlChanging(string value);
    partial void OnSiteUrlChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public CRSite()
		{
			this._CRItems = new EntitySet<CRItem>(new Action<CRItem>(this.attach_CRItems), new Action<CRItem>(this.detach_CRItems));
			this._CRSitePages = new EntitySet<CRSitePage>(new Action<CRSitePage>(this.attach_CRSitePages), new Action<CRSitePage>(this.detach_CRSitePages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SiteCode
		{
			get
			{
				return this._SiteCode;
			}
			set
			{
				if ((this._SiteCode != value))
				{
					this.OnSiteCodeChanging(value);
					this.SendPropertyChanging();
					this._SiteCode = value;
					this.SendPropertyChanged("SiteCode");
					this.OnSiteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUrl", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this.OnSiteUrlChanging(value);
					this.SendPropertyChanging();
					this._SiteUrl = value;
					this.SendPropertyChanged("SiteUrl");
					this.OnSiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRSite_CRItem", Storage="_CRItems", ThisKey="SiteCode", OtherKey="SiteCode")]
		public EntitySet<CRItem> CRItems
		{
			get
			{
				return this._CRItems;
			}
			set
			{
				this._CRItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRSite_CRSitePage", Storage="_CRSitePages", ThisKey="SiteCode", OtherKey="SiteCode")]
		public EntitySet<CRSitePage> CRSitePages
		{
			get
			{
				return this._CRSitePages;
			}
			set
			{
				this._CRSitePages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRItems(CRItem entity)
		{
			this.SendPropertyChanging();
			entity.CRSite = this;
		}
		
		private void detach_CRItems(CRItem entity)
		{
			this.SendPropertyChanging();
			entity.CRSite = null;
		}
		
		private void attach_CRSitePages(CRSitePage entity)
		{
			this.SendPropertyChanging();
			entity.CRSite = this;
		}
		
		private void detach_CRSitePages(CRSitePage entity)
		{
			this.SendPropertyChanging();
			entity.CRSite = null;
		}
	}
	
	public partial class Proc_CRLoadUrlCrawResult
	{
		
		private string _SiteCode;
		
		private string _SiteItemGroup;
		
		private string _PageUrl;
		
		private string _SiteUrl;
		
		public Proc_CRLoadUrlCrawResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteCode
		{
			get
			{
				return this._SiteCode;
			}
			set
			{
				if ((this._SiteCode != value))
				{
					this._SiteCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteItemGroup", DbType="NVarChar(50)")]
		public string SiteItemGroup
		{
			get
			{
				return this._SiteItemGroup;
			}
			set
			{
				if ((this._SiteItemGroup != value))
				{
					this._SiteItemGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageUrl", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PageUrl
		{
			get
			{
				return this._PageUrl;
			}
			set
			{
				if ((this._PageUrl != value))
				{
					this._PageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUrl", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this._SiteUrl = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
